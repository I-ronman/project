# ==== 기본 ====
spring.application.name=Ironman
server.port=329
server.servlet.context-path=/web
server.servlet.session.timeout=1h
# 프록시/HTTPS 헤더 인식
server.forward-headers-strategy=framework   

# ==== 세션 쿠키(크로스도메인 대응) ====
# 배포 기준으로 통일: SameSite=None + Secure=true
# → 로컬에서도 스프링을 HTTPS로 띄워야 브라우저가 쿠키를 전송함
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true

# ==== DB ====
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://project-db-cgi.smhrd.com:3307/CGI_25IS_CLOUD_P3_1
spring.datasource.username=CGI_25IS_CLOUD_P3_1
spring.datasource.password=smhrd1

# ==== JPA ====
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ==== Mail ====
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=spit115@naver.com
spring.mail.password=CMN4JHZM6KZU
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true

# ==== OAuth2(Google) ====
# 배포 도메인으로 고정 (로컬에서 OAuth 테스트는 어려움)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=https://api.your-domain.com/web/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?prompt=consent
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# ==== (로컬 HTTPS용) Self-signed SSL 설정 ====
# 아래 keystore를 만들면 주석 해제해서 쓰세요
# server.ssl.enabled=true
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-type=PKCS12
# server.ssl.key-store-password=changeit
